services:
  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - agenda-network

  adminer:
    image: adminer
    restart: always
    # Optional: Expose only for debugging
    # ports: 
    #   - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - agenda-network
    profiles:
      - debug  # Start with: docker compose --profile debug up

  migrations:
    build:
      context: .
      dockerfile: .dockerfile
    image: planner-rust-img
    command: sh -c "sleep 5 && ./migration-cli up"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - agenda-network

  app:
    build:
      context: .
      dockerfile: .dockerfile
    image: planner-rust-img
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      migrations:
        condition: service_completed_successfully
    networks:
      - agenda-network

volumes:
  postgres_data:

networks:
  agenda-network:
    driver: bridge