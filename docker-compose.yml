services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database Admin Interface
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - db

  # Database Migrations
  migrations:
    build:
      context: .
      dockerfile: .dockerfile
    image: planner-rust-img
    command: sh -c "./migration-cli up"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
    depends_on:
      db:
        condition: service_healthy

  # Application Server
  app:
    build:
      context: .
      dockerfile: .dockerfile
    image: planner-rust-img
    depends_on:
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      - ROCKET_ADDRESS=0.0.0.0
      - ROCKET_PORT=8000

volumes:
  postgres_data:

